{"version":3,"file":"static/js/496.4c2e2df1.chunk.js","mappings":"oRAEaA,EAAsBC,EAAAA,GAAAA,IAAH,0CAInBC,EAAqBD,EAAAA,GAAAA,KAAH,0qB,SCEhB,SAASE,IAEpB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAASC,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IAChCC,GAAUF,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IACjCE,GAAaH,EAAAA,EAAAA,UAAQ,kBAAKC,EAAAA,EAAAA,KAAL,GAAe,IAEpCG,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAACC,GAClB,MAAwBA,EAAMC,cAAtBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MAEd,OAAQhB,GACJ,IAAK,OACDC,EAAQe,GACR,MACJ,IAAK,QACDb,EAASa,GACT,MACJ,IAAK,WACDX,EAAYW,GACZ,MACJ,QACIf,EAAQ,IACRE,EAAS,IACTE,EAAY,IAEvB,EAUD,OACI,UAACV,EAAD,YACI,UAACE,EAAD,CAAoBoB,SAVP,SAACC,GAClBA,EAAEC,iBACFR,GAASS,EAAAA,EAAAA,IAAO,CAAEpB,KAAMA,EAAME,MAAOA,EAAOE,SAAUA,KACtDH,EAAQ,IACRE,EAAS,IACTE,EAAY,GACnB,EAIW,WACI,kBAAOgB,QAAQ,WAAf,wBAGA,kBACIC,GAAIhB,EACJiB,KAAK,OACLvB,KAAK,OACLgB,MAAOhB,EACPwB,aAAa,WACbC,SAAUZ,EACVa,MAAM,kBACNC,YAAY,kBACZC,UAAQ,KAEZ,kBAAOP,QAAQ,aAAf,0BAGA,kBACIC,GAAIb,EACJc,KAAK,QACLvB,KAAK,QACLgB,MAAOd,EACPsB,aAAa,WACbC,SAAUZ,EACVa,MAAM,qBACNC,YAAY,qBACZC,UAAQ,KAEZ,kBAAOP,QAAQ,aAAf,4BAGA,kBACIC,GAAIZ,EACJa,KAAK,WACLvB,KAAK,WACLwB,aAAa,eACbR,MAAOZ,EACPqB,SAAUZ,EACVa,MAAM,0BACNC,YAAY,sBACZC,UAAQ,KAEZ,mBAAQL,KAAK,SAAb,mCAEJ,SAAC,KAAD,CAAgBM,UAAW,QAGtC,C","sources":["pages/RegisterPage/RegisterPageStyled.js","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const RegisterPageWrapper = styled.div`\n  padding: 20px;\n`;\n\nexport const RegisterFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  border: 2px solid black;\n  border-radius: 8px;\n  padding: 10px;\n\n  & label {\n    margin-bottom: 10px;\n    font-size: 1.1em;\n  }\n\n  & input {\n    max-width: 300px;\n    height: 30px;\n    font-size: 1.1em;\n    padding-left: 10px;\n    margin-bottom: 10px;\n\n    &:focus {\n      outline: 2px solid #00bfff;\n    }\n  }\n\n  & button {\n    padding: 8px;\n    max-width: 140px;\n    font-size: 1.1em;\n    border: 1px solid black;\n    border-radius: 4px;\n\n    &:hover,\n    :focus {\n      background-color: #00bfff;\n      color: #ffffff;\n      cursor: pointer;\n    }\n  }\n`;\n","import { useState, useMemo } from 'react';\nimport {useDispatch } from 'react-redux';\nimport {ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { nanoid } from 'nanoid';\nimport { signup } from 'redux/authOperations';\nimport { RegisterFormStyled, RegisterPageWrapper } from './RegisterPageStyled';\n\nexport default function RegisterForm() {\n\n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const nameId = useMemo(()=> nanoid(), []);\n    const emailId = useMemo(()=> nanoid(), []);\n    const passwordId = useMemo(()=> nanoid(), []);\n\n    const dispatch = useDispatch();\n\n    const handleChange = (event) => {\n        const { name, value } = event.currentTarget;\n\n        switch (name) {\n            case 'name':\n                setName(value);\n                break;\n            case 'email':\n                setEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n            default:\n                setName('');\n                setEmail('');\n                setPassword('');\n        };\n    };\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        dispatch(signup({ name: name, email: email, password: password }));\n        setName('');\n        setEmail('');\n        setPassword('');\n};\n\n    return (\n        <RegisterPageWrapper>\n            <RegisterFormStyled onSubmit={handleSubmit}>\n                <label htmlFor='{nameId}'>\n                    User Name\n                </label>\n                <input\n                    id={nameId}\n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    autoComplete=\"username\"\n                    onChange={handleChange}\n                    title=\"Enter your Name\"\n                    placeholder=\"Enter your Name\"\n                    required\n                />\n                <label htmlFor='{numberId}'>\n                    User e-mail\n                </label>\n                <input\n                    id={emailId}\n                    type=\"email\"\n                    name=\"email\"\n                    value={email}\n                    autoComplete=\"username\"\n                    onChange={handleChange}\n                    title=\"Enter valid E-Mail\"\n                    placeholder=\"Enter valid E-Mail\"\n                    required\n                />\n                <label htmlFor='{numberId}'>\n                    User password\n                </label>\n                <input\n                    id={passwordId}\n                    type=\"password\"\n                    name=\"password\"\n                    autoComplete=\"new-password\"\n                    value={password}\n                    onChange={handleChange}\n                    title=\"Enter minimum 7 simbols\"\n                    placeholder=\"Enter your password\"\n                    required\n                />\n                <button type=\"submit\">Click to register</button>\n            </RegisterFormStyled>\n            <ToastContainer autoClose={3000} />\n        </RegisterPageWrapper>\n    )\n};"],"names":["RegisterPageWrapper","styled","RegisterFormStyled","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","nameId","useMemo","nanoid","emailId","passwordId","dispatch","useDispatch","handleChange","event","currentTarget","value","onSubmit","e","preventDefault","signup","htmlFor","id","type","autoComplete","onChange","title","placeholder","required","autoClose"],"sourceRoot":""}